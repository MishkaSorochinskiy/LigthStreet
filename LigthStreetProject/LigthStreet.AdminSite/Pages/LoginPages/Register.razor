@layout LoginLayout
@page "/register"
@using LigthStreet.AdminSite.Services.Interfaces

@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject IJSRuntime JSRuntime

<div class="limiter">
    <div class="container-login100">
        <div class="wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55">
            <EditForm Model="@user" OnValidSubmit="@RegisterUser">
                <span class="login100-form-title p-b-32">
                    Register
                </span>
                <div class="alert alert-danger" id="alert" role="alert">
                    <button type="button" onclick="closeAlert()" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <span class="txt1 p-b-11">
                    Login
                </span>
                <div class="form-group">
                    <input type="text" class="form-control input100" id="Username" @bind="user.Login" required="" aria-describedby="emailHelp" placeholder="Enter login">
                    <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
                </div>
                <span class="txt1 p-b-11">
                    Firstname
                </span>
                <div class="form-group">
                    <input type="text" class="form-control input100" id="Firstname" @bind="user.FirstName" required="" aria-describedby="emailHelp" placeholder="Enter firstname">
                </div>
                <span class="txt1 p-b-11">
                    Lastname
                </span>
                <div class="form-group">
                    <input type="text" class="form-control input100" id="Lastname" @bind="user.LastName" required="" aria-describedby="emailHelp" placeholder="Enter lastname">
                </div>
                <span class="txt1 p-b-11">
                    Email
                </span>
                <div class="form-group">
                    <input type="email" class="form-control input100" id="EmailUser" @bind="user.Email" required aria-describedby="emailHelp" placeholder="Enter email">
                    <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
                </div>
                <span class="txt1 p-b-11">
                    Password
                </span>
                <div class="form-group">
                    <span toggle="#password-field" id="eyePassword" onclick="showPassword()" class="oi oi-eye field-icon toggle-password"></span>
                    <input type="password" class="form-control input100" @bind="user.Password" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\s).{8,15}" title="Must contain at least one number and special symbol, one uppercase and lowercase letter, and at least 8 or more characters" id="PasswordUser" required="" placeholder="Password">
                    <span class="focus-input100"></span>
                </div>
                <div class="container-login100-form-btn">
                    <button type="submit" class="login100-form-btn" id="register-btn">
                        Register
                    </button>
                </div>

            </EditForm>
        </div>
    </div>
</div>


@code {

    private RegisterModel user;
    public string LoginMesssage { get; set; }

    protected override Task OnInitializedAsync()
    {
        user = new RegisterModel();
        return base.OnInitializedAsync();
    }

    private async Task RegisterUser()
    {
        await JSRuntime.InvokeVoidAsync("disableRegister");
        var result = await AuthService.Register(user);
        if (result.Successfull)
        {
            NavigationManager.NavigateTo("/login", true);
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("registerAlert", result.Error);
            user.Login = "";
        }
        await JSRuntime.InvokeVoidAsync("enableRegister");
    }

}

<style>
    body {
        background-color: #ebebeb;
    }
    .login100-form-btn:disabled,
    .login100-form-btn[disabled] {
        border: 1px solid #999999;
        background-color: #ced4da;
        color: #666666;
    }

    .limiter {
        width: 100%;
        margin: 0 auto;
    }


</style>
   
